//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Source Executable: c:\windows\system32\lsm.dll
// Interface ID: 53825514-1183-4934-a0f4-cfdc51c3389b
// Interface Version: 1.0
// Client Generated: 12/21/2019 9:38:48 PM
// NtApiDotNet Version: 1.1.24

namespace rpc_53825514_1183_4934_a0f4_cfdc51c3389b_1_0
{
    
    #region Marshal Helpers
    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer
    {
        public void Write_0(Struct_0 p0)
        {
            WriteStruct<Struct_0>(p0);
        }
        public void Write_1(Union_1 p0, long p1)
        {
            WriteUnion<Union_1>(p0, p1);
        }
        public void Write_2(Struct_2 p0)
        {
            WriteStruct<Struct_2>(p0);
        }
        public void Write_3(string p0)
        {
            WriteFixedString(p0, 33);
        }
        public void Write_4(string p0)
        {
            WriteFixedString(p0, 18);
        }
        public void Write_5(string p0)
        {
            WriteFixedString(p0, 21);
        }
        public void Write_6(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
    }
    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer
    {
        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : 
                base(r.NdrBuffer, r.Handles, r.DataRepresentation)
        {
        }
        public _Unmarshal_Helper(byte[] ba) : 
                base(ba)
        {
        }
        public Struct_0 Read_0()
        {
            return ReadStruct<Struct_0>();
        }
        public Union_1 Read_1()
        {
            return ReadStruct<Union_1>();
        }
        public Struct_2 Read_2()
        {
            return ReadStruct<Struct_2>();
        }
        public string Read_3()
        {
            return ReadFixedString(33);
        }
        public string Read_4()
        {
            return ReadFixedString(18);
        }
        public string Read_5()
        {
            return ReadFixedString(21);
        }
        public sbyte[] Read_6()
        {
            return ReadConformantArray<sbyte>();
        }
    }
    #endregion
    #region Complex Types
    public struct Struct_0 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.Write_1(Member8, Member0);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member8 = u.Read_1();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 8;
        }
        public int Member0;
        public Union_1 Member8;
        public static Struct_0 CreateDefault()
        {
            return new Struct_0();
        }
        public Struct_0(int Member0, Union_1 Member8)
        {
            this.Member0 = Member0;
            this.Member8 = Member8;
        }
    }
    public struct Union_1 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            throw new System.NotImplementedException();
        }
        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)
        {
            Selector = ((uint)(l));
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteUInt32(Selector);
            if ((Selector == 1))
            {
                m.Write_2(Arm_1);
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_1");
        done:
            return;
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Selector = u.ReadUInt32();
            if ((Selector == 1))
            {
                Arm_1 = u.Read_2();
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_1");
        done:
            return;
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 1;
        }
        private uint Selector;
        public Struct_2 Arm_1;
        public static Union_1 CreateDefault()
        {
            return new Union_1();
        }
        public Union_1(uint Selector, Struct_2 Arm_1)
        {
            this.Selector = Selector;
            this.Arm_1 = Arm_1;
        }
    }
    public struct Struct_2 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.WriteInt32(Member4);
            m.Write_3(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member8, "Member8"));
            m.Write_4(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member4A, "Member4A"));
            m.Write_5(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member6E, "Member6E"));
            m.WriteInt64(Member98);
            m.WriteInt64(MemberA0);
            m.WriteInt64(MemberA8);
            m.WriteInt64(MemberB0);
            m.WriteInt32(MemberB8);
            m.WriteEmbeddedPointer<sbyte[], long>(MemberC0, new System.Action<sbyte[], long>(m.Write_6), MemberB8);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member4 = u.ReadInt32();
            Member8 = u.Read_3();
            Member4A = u.Read_4();
            Member6E = u.Read_5();
            Member98 = u.ReadInt64();
            MemberA0 = u.ReadInt64();
            MemberA8 = u.ReadInt64();
            MemberB0 = u.ReadInt64();
            MemberB8 = u.ReadInt32();
            MemberC0 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_6), false);
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 8;
        }
        public int Member0;
        public int Member4;
        public string Member8;
        public string Member4A;
        public string Member6E;
        public long Member98;
        public long MemberA0;
        public long MemberA8;
        public long MemberB0;
        public int MemberB8;
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> MemberC0;
        public static Struct_2 CreateDefault()
        {
            Struct_2 ret = new Struct_2();
            ret.Member8 = new string('\0', 33);
            ret.Member4A = new string('\0', 18);
            ret.Member6E = new string('\0', 21);
            return ret;
        }
        public Struct_2(int Member0, int Member4, string Member8, string Member4A, string Member6E, long Member98, long MemberA0, long MemberA8, long MemberB0, int MemberB8, sbyte[] MemberC0)
        {
            this.Member0 = Member0;
            this.Member4 = Member4;
            this.Member8 = Member8;
            this.Member4A = Member4A;
            this.Member6E = Member6E;
            this.Member98 = Member98;
            this.MemberA0 = MemberA0;
            this.MemberA8 = MemberA8;
            this.MemberB0 = MemberB0;
            this.MemberB8 = MemberB8;
            this.MemberC0 = MemberC0;
        }
    }
    #endregion
    #region Client Implementation
    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase
    {
        public Client() : 
                base("53825514-1183-4934-a0f4-cfdc51c3389b", 1, 0)
        {
        }
        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)
        {
            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));
        }
        public int Proc0(out sbyte p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(0, m);
            p0 = u.ReadSByte();
            return u.ReadInt32();
        }
        public int Proc1(out string p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(1, m);
            p0 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            return u.ReadInt32();
        }
        public int Proc2(int p0, out Struct_0 p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            _Unmarshal_Helper u = SendReceive(2, m);
            p1 = u.Read_0();
            return u.ReadInt32();
        }
        public int Proc3(int p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            _Unmarshal_Helper u = SendReceive(3, m);
            p1 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int Proc4(out int p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(4, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
    }
    #endregion
}

