//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Source Executable: c:\windows\system32\crypttpmeksvc.dll
// Interface ID: 2579ff35-0ab0-4e5a-88fa-1d88c4e0cb92
// Interface Version: 2.0
// Client Generated: 12/21/2019 9:38:47 PM
// NtApiDotNet Version: 1.1.24

namespace rpc_2579ff35_0ab0_4e5a_88fa_1d88c4e0cb92_2_0
{
    
    #region Marshal Helpers
    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer
    {
        public void Write_0(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_1(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_2(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_3(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_4(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_5(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_6(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_7(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_8(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
    }
    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer
    {
        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : 
                base(r.NdrBuffer, r.Handles, r.DataRepresentation)
        {
        }
        public _Unmarshal_Helper(byte[] ba) : 
                base(ba)
        {
        }
        public byte[] Read_0()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_1()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_2()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_3()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_4()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_5()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_6()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_7()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_8()
        {
            return ReadConformantArray<byte>();
        }
    }
    #endregion
    #region Client Implementation
    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase
    {
        public Client() : 
                base("2579ff35-0ab0-4e5a-88fa-1d88c4e0cb92", 2, 0)
        {
        }
        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)
        {
            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));
        }
        public int EKCliTpmGetManufacturerInfo(string p0, int p1, byte[] p2, string p3, int p4, out int p5, out byte[] p6, out int p7, out byte[] p8)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.Write_0(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p1);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, "p3"));
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(0, m);
            p5 = u.ReadInt32();
            p6 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_1), false);
            p7 = u.ReadInt32();
            p8 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_2), false);
            return u.ReadInt32();
        }
        public int EKCliTpmGetManufacturerInfo_1(int p0, byte[] p1, string p2, int p3, byte[] p4, out int p5, out byte[] p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.Write_3(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"), p0);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p3);
            m.WriteReferent(p4, new System.Action<byte[], long>(m.Write_4), p3);
            _Unmarshal_Helper u = SendReceive(1, m);
            p5 = u.ReadInt32();
            p6 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_1), false);
            return u.ReadInt32();
        }
        public int EKCliTpmGetManufacturerInfo_2(string p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            _Unmarshal_Helper u = SendReceive(2, m);
            p1 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int EKCliTpmGetManufacturerInfo_3(string p0, string p1, out int p2, out byte[] p3, out int p4, out byte[] p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            _Unmarshal_Helper u = SendReceive(3, m);
            p2 = u.ReadInt32();
            p3 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_5), false);
            p4 = u.ReadInt32();
            p5 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_6), false);
            return u.ReadInt32();
        }
        public int EKCliTpmGetManufacturerInfo_4(string p0, out string p1, out string p2, out NtApiDotNet.Ndr.Marshal.NdrEnum16 p3, out byte[] p4, out int p5, out byte[] p6, out int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            _Unmarshal_Helper u = SendReceive(4, m);
            p1 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            p3 = u.ReadEnum16();
            p4 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_7), false);
            p5 = u.ReadInt32();
            p6 = u.ReadReferent<byte[]>(new System.Func<byte[]>(u.Read_8), false);
            p7 = u.ReadInt32();
            return u.ReadInt32();
        }
    }
    #endregion
}

